<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1467960198000</longProp>
        <longProp name="ThreadGroup.end_time">1467960198000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="server" elementType="Argument">
              <stringProp name="Argument.name">server</stringProp>
              <stringProp name="Argument.value">http://localhost:8080/avs5/soap/rs</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="user" elementType="Argument">
              <stringProp name="Argument.name">user</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">2016-07-12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${__V(server)}</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url"></stringProp>
              <stringProp name="Authorization.username">${__V(user)}</stringProp>
              <stringProp name="Authorization.password">${__V(password)}</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
          </collectionProp>
          <boolProp name="AuthManager.clearEachIteration">true</boolProp>
        </AuthManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/xml; charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="echo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;EchoRequest&gt;&#xd;
	&lt;message&gt;Test&lt;/message&gt;&#xd;
&lt;/EchoRequest&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${__V(server)}/sales/echo</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">false</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Проверка ответа" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">/Response/Body/message/text()=&apos;Test&apos;</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">false</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="dispatchStations" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetDispatchStationsRequest&gt;&#xd;
&lt;/GetDispatchStationsRequest&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${__V(server)}/sales/getDispatchStations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">false</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во станций &gt; 0" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(/Response/Body/Station)&gt;0</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">false</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить все ID станций" enabled="true">
            <stringProp name="XPathExtractor.default"></stringProp>
            <stringProp name="XPathExtractor.refname">dispatchStationIds</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Station/id</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Для каждой станции отправления" enabled="true">
          <stringProp name="ForeachController.inputVal">dispatchStationIds</stringProp>
          <stringProp name="ForeachController.returnVal">dispatchStationId</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="arrivalStation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetArrivalStationsRequest&gt;&#xd;
	&lt;dispatchStationId&gt;${dispatchStationId}&lt;/dispatchStationId&gt;&#xd;
&lt;/GetArrivalStationsRequest&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${__V(server)}/sales/getArrivalStations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во станций &gt; 0" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">count(/Response/Body/Station)&gt;0</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить все ID станций" enabled="true">
              <stringProp name="XPathExtractor.default"></stringProp>
              <stringProp name="XPathExtractor.refname">arrivalStationIds</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Station/id</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Для каждой станции назначения" enabled="true">
            <stringProp name="ForeachController.inputVal">arrivalStationIds</stringProp>
            <stringProp name="ForeachController.returnVal">arrivalStationId</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="searchTrips" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;SearchTripsRequest&gt;&#xd;
	&lt;dispatchStationId&gt;${dispatchStationId}&lt;/dispatchStationId&gt;&#xd;
	&lt;arrivalStationId&gt;${arrivalStationId}&lt;/arrivalStationId&gt;&#xd;
	&lt;date&gt;${__V(date)}&lt;/date&gt;&#xd;
&lt;/SearchTripsRequest&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${__V(server)}/sales/searchTrips</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
              </XPathAssertion>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить все ID рейсов" enabled="true">
                <stringProp name="XPathExtractor.default"></stringProp>
                <stringProp name="XPathExtractor.refname">tripIds</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Trip/id</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Для каждого рейса" enabled="true">
              <stringProp name="ForeachController.inputVal">tripIds</stringProp>
              <stringProp name="ForeachController.returnVal">tripId</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.endIndex">1</stringProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос остановочных пунктов" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetTripStopsRequest&gt;&#xd;
	&lt;tripId&gt;${tripId}&lt;/tripId&gt;&#xd;
&lt;/GetTripStopsRequest&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${__V(server)}/sales/getTripStops</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                </XPathAssertion>
                <hashTree/>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во типов билетов &gt; 0" enabled="true">
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">count(/Response/Body/TicketType)&gt;0</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">false</boolProp>
                </XPathAssertion>
                <hashTree/>
                <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить все ID типов билетов" enabled="true">
                  <stringProp name="XPathExtractor.default"></stringProp>
                  <stringProp name="XPathExtractor.refname">ticketTypeIds</stringProp>
                  <stringProp name="XPathExtractor.xpathQuery">/Response/Body/TicketType/id</stringProp>
                  <boolProp name="XPathExtractor.validate">false</boolProp>
                  <boolProp name="XPathExtractor.tolerant">false</boolProp>
                  <boolProp name="XPathExtractor.namespace">false</boolProp>
                </XPathExtractor>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Бронирование, Подтверждение, Отмена" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Поиск свободных мест" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetFreeSeatsRequest&gt;&#xd;
	&lt;tripId&gt;${tripId}&lt;/tripId&gt;&#xd;
	&lt;dispatchStationId&gt;${dispatchStationId}&lt;/dispatchStationId&gt;&#xd;
	&lt;arrivalStationId&gt;${arrivalStationId}&lt;/arrivalStationId&gt;	&#xd;
&lt;/GetFreeSeatsRequest&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${__V(server)}/sales/getFreeSeats</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить все ID мест" enabled="true">
                    <stringProp name="XPathExtractor.default"></stringProp>
                    <stringProp name="XPathExtractor.refname">seatIds</stringProp>
                    <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Seat/id</stringProp>
                    <boolProp name="XPathExtractor.validate">false</boolProp>
                    <boolProp name="XPathExtractor.tolerant">false</boolProp>
                    <boolProp name="XPathExtractor.namespace">false</boolProp>
                  </XPathExtractor>
                  <hashTree/>
                </hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Для каждого свободного месте" enabled="true">
                  <stringProp name="ForeachController.inputVal">seatIds</stringProp>
                  <stringProp name="ForeachController.returnVal">seatId</stringProp>
                  <boolProp name="ForeachController.useSeparator">true</boolProp>
                  <stringProp name="ForeachController.endIndex">1</stringProp>
                </ForeachController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос типов билетов" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetTicketTypesRequest&gt;&#xd;
	&lt;tripId&gt;${tripId}&lt;/tripId&gt;&#xd;
	&lt;dispatchStationId&gt;${dispatchStationId}&lt;/dispatchStationId&gt;&#xd;
	&lt;arrivalStationId&gt;${arrivalStationId}&lt;/arrivalStationId&gt;	&#xd;
&lt;/GetTicketTypesRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/getTicketTypes</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во типов билетов &gt; 0" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">count(/Response/Body/TicketType)&gt;0</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить все ID типов билетов" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">ticketTypeIds</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/TicketType/id</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос типов документов" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetDocumentTypesRequest&gt;&#xd;
	&lt;tripId&gt;${tripId}&lt;/tripId&gt;&#xd;
	&lt;dispatchStationId&gt;${dispatchStationId}&lt;/dispatchStationId&gt;&#xd;
	&lt;arrivalStationId&gt;${arrivalStationId}&lt;/arrivalStationId&gt;	&#xd;
&lt;/GetDocumentTypesRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/getDocumentTypes</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во типов документов &gt; 0" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">count(/Response/Body/DocumentType)&gt;0</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить все ID типов документов" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">documentTypeIds</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/DocumentType/id</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Создание договора" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;BookOrderRequest&gt;&#xd;
	&lt;tripId&gt;${tripId}&lt;/tripId&gt;&#xd;
	&lt;dispatchStationId&gt;${dispatchStationId}&lt;/dispatchStationId&gt;&#xd;
	&lt;arrivalStationId&gt;${arrivalStationId}&lt;/arrivalStationId&gt;	&#xd;
	&lt;Sale&gt;&#xd;
		&lt;seatId&gt;${seatId}&lt;/seatId&gt;&#xd;
		&lt;ticketTypeId&gt;${ticketTypeIds_1}&lt;/ticketTypeId&gt;&#xd;
		&lt;Passenger&gt;&#xd;
			&lt;firstName&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/firstName&gt;&#xd;
			&lt;lastName&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/lastName&gt;&#xd;
			&lt;middleName&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/middleName&gt;			&#xd;
			&lt;docNum&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/docNum&gt;			&#xd;
			&lt;docSeries&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/docSeries&gt;			&#xd;
			&lt;docTypeId&gt;${documentTypeIds_1}&lt;/docTypeId&gt;			&#xd;
			&lt;birthday&gt;1985-01-01&lt;/birthday&gt;&#xd;
			&lt;citizenshipISO2&gt;RU&lt;/citizenshipISO2&gt;&#xd;
			&lt;gender&gt;MALE&lt;/gender&gt;&#xd;
		&lt;/Passenger&gt;&#xd;
	&lt;/Sale&gt;	&#xd;
&lt;/BookOrderRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/bookOrder</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить ID договора" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">orderId</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/orderId</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос информации по договору" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetOrderRequest&gt;&#xd;
	&lt;orderId&gt;${orderId}&lt;/orderId&gt;&#xd;
&lt;/GetOrderRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/getOrder</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во билетов = 1" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">count(/Response/Body/Ticket)=1</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить ID билета" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">ticketId</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Ticket/id</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Статус договора" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/Body/Ticket/status/text()=&apos;RESERVED&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Страна" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/Body/Ticket/Passenger/citizenshipISO2/text()=&apos;RU&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Изменения данных пассажира" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;UpdateTicketRequest&gt;&#xd;
	&lt;ticketId&gt;${ticketId}&lt;/ticketId&gt;&#xd;
	&lt;Passenger&gt;&#xd;
		&lt;firstName&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/firstName&gt;&#xd;
		&lt;lastName&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/lastName&gt;&#xd;
		&lt;middleName&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/middleName&gt;			&#xd;
		&lt;docNum&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/docNum&gt;			&#xd;
		&lt;docSeries&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/docSeries&gt;			&#xd;
		&lt;docTypeId&gt;${documentTypeIds_1}&lt;/docTypeId&gt;			&#xd;
		&lt;birthday&gt;1986-01-01&lt;/birthday&gt;&#xd;
		&lt;citizenshipISO2&gt;RU&lt;/citizenshipISO2&gt;&#xd;
		&lt;gender&gt;FEMALE&lt;/gender&gt;&#xd;
	&lt;/Passenger&gt;&#xd;
&lt;/UpdateTicketRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/updateTicket</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Подтверждение оплаты" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;ConfirmOrderRequest&gt;&#xd;
	&lt;orderId&gt;${orderId}&lt;/orderId&gt;&#xd;
&lt;/ConfirmOrderRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/confirmOrder</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во билетов = 1" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">count(/Response/Body/Ticket)=1</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить ID билета" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">orderId</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Ticket/id</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Статус договора" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/Body/Ticket/status/text()=&apos;SOLD&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Отмена билета" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;CancelTicketRequest&gt;&#xd;
	&lt;ticketId&gt;${ticketId}&lt;/ticketId&gt;&#xd;
&lt;/CancelTicketRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/cancelTicket</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во билетов = 1" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">count(/Response/Body/Ticket)=1</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить ID билета" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">orderId</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Ticket/id</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Статус договора" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/Body/Ticket/status/text()=&apos;CANCELED&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Бронирование, Подтверждение, Возврат" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Поиск свободных мест" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetFreeSeatsRequest&gt;&#xd;
	&lt;tripId&gt;${tripId}&lt;/tripId&gt;&#xd;
	&lt;dispatchStationId&gt;${dispatchStationId}&lt;/dispatchStationId&gt;&#xd;
	&lt;arrivalStationId&gt;${arrivalStationId}&lt;/arrivalStationId&gt;	&#xd;
&lt;/GetFreeSeatsRequest&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${__V(server)}/sales/getFreeSeats</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                  <hashTree/>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">false</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                  <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить все ID мест" enabled="true">
                    <stringProp name="XPathExtractor.default"></stringProp>
                    <stringProp name="XPathExtractor.refname">seatIds</stringProp>
                    <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Seat/id</stringProp>
                    <boolProp name="XPathExtractor.validate">false</boolProp>
                    <boolProp name="XPathExtractor.tolerant">false</boolProp>
                    <boolProp name="XPathExtractor.namespace">false</boolProp>
                  </XPathExtractor>
                  <hashTree/>
                </hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Для каждого свободного месте" enabled="true">
                  <stringProp name="ForeachController.inputVal">seatIds</stringProp>
                  <stringProp name="ForeachController.returnVal">seatId</stringProp>
                  <boolProp name="ForeachController.useSeparator">true</boolProp>
                  <stringProp name="ForeachController.endIndex">1</stringProp>
                </ForeachController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос типов билетов" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetTicketTypesRequest&gt;&#xd;
	&lt;tripId&gt;${tripId}&lt;/tripId&gt;&#xd;
	&lt;dispatchStationId&gt;${dispatchStationId}&lt;/dispatchStationId&gt;&#xd;
	&lt;arrivalStationId&gt;${arrivalStationId}&lt;/arrivalStationId&gt;	&#xd;
&lt;/GetTicketTypesRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/getTicketTypes</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во типов билетов &gt; 0" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">count(/Response/Body/TicketType)&gt;0</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить все ID типов билетов" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">ticketTypeIds</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/TicketType/id</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос типов документов" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetDocumentTypesRequest&gt;&#xd;
	&lt;tripId&gt;${tripId}&lt;/tripId&gt;&#xd;
	&lt;dispatchStationId&gt;${dispatchStationId}&lt;/dispatchStationId&gt;&#xd;
	&lt;arrivalStationId&gt;${arrivalStationId}&lt;/arrivalStationId&gt;	&#xd;
&lt;/GetDocumentTypesRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/getDocumentTypes</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во типов документов &gt; 0" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">count(/Response/Body/DocumentType)&gt;0</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить все ID типов документов" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">documentTypeIds</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/DocumentType/id</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Создание договора" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;BookOrderRequest&gt;&#xd;
	&lt;tripId&gt;${tripId}&lt;/tripId&gt;&#xd;
	&lt;dispatchStationId&gt;${dispatchStationId}&lt;/dispatchStationId&gt;&#xd;
	&lt;arrivalStationId&gt;${arrivalStationId}&lt;/arrivalStationId&gt;	&#xd;
	&lt;Sale&gt;&#xd;
		&lt;seatId&gt;${seatId}&lt;/seatId&gt;&#xd;
		&lt;ticketTypeId&gt;${ticketTypeIds_1}&lt;/ticketTypeId&gt;&#xd;
		&lt;Passenger&gt;&#xd;
			&lt;firstName&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/firstName&gt;&#xd;
			&lt;lastName&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/lastName&gt;&#xd;
			&lt;middleName&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/middleName&gt;			&#xd;
			&lt;docNum&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/docNum&gt;			&#xd;
			&lt;docSeries&gt;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)}&lt;/docSeries&gt;			&#xd;
			&lt;docTypeId&gt;${documentTypeIds_1}&lt;/docTypeId&gt;			&#xd;
			&lt;birthday&gt;1985-01-01&lt;/birthday&gt;&#xd;
			&lt;citizenshipISO2&gt;RU&lt;/citizenshipISO2&gt;&#xd;
			&lt;gender&gt;MALE&lt;/gender&gt;&#xd;
		&lt;/Passenger&gt;&#xd;
	&lt;/Sale&gt;	&#xd;
&lt;/BookOrderRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/bookOrder</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить ID договора" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">orderId</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/orderId</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос информации по договору" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;GetOrderRequest&gt;&#xd;
	&lt;orderId&gt;${orderId}&lt;/orderId&gt;&#xd;
&lt;/GetOrderRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/getOrder</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во билетов = 1" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">count(/Response/Body/Ticket)=1</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить ID билета" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">ticketId</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Ticket/id</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Статус договора" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/Body/Ticket/status/text()=&apos;RESERVED&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Страна" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/Body/Ticket/Passenger/citizenshipISO2/text()=&apos;RU&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Подтверждение оплаты" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;ConfirmOrderRequest&gt;&#xd;
	&lt;orderId&gt;${orderId}&lt;/orderId&gt;&#xd;
&lt;/ConfirmOrderRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/confirmOrder</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во билетов = 1" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">count(/Response/Body/Ticket)=1</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить ID билета" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">orderId</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Ticket/id</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Статус договора" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/Body/Ticket/status/text()=&apos;SOLD&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Возврат билета" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;ReturnTicketRequest&gt;&#xd;
	&lt;ticketId&gt;${ticketId}&lt;/ticketId&gt;&#xd;
&lt;/ReturnTicketRequest&gt;</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">${__V(server)}/sales/returnTicket</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="Это XML?" enabled="true"/>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Ответ положительный?" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/@success=&apos;true&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Кол-во билетов = 1" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">count(/Response/Body/Ticket)=1</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                    <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Получить ID билета" enabled="true">
                      <stringProp name="XPathExtractor.default"></stringProp>
                      <stringProp name="XPathExtractor.refname">orderId</stringProp>
                      <stringProp name="XPathExtractor.xpathQuery">/Response/Body/Ticket/id</stringProp>
                      <boolProp name="XPathExtractor.validate">false</boolProp>
                      <boolProp name="XPathExtractor.tolerant">false</boolProp>
                      <boolProp name="XPathExtractor.namespace">false</boolProp>
                    </XPathExtractor>
                    <hashTree/>
                    <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Статус договора" enabled="true">
                      <boolProp name="XPath.negate">false</boolProp>
                      <stringProp name="XPath.xpath">/Response/Body/Ticket/status/text()=&apos;RETURNED&apos;</stringProp>
                      <boolProp name="XPath.validate">false</boolProp>
                      <boolProp name="XPath.whitespace">false</boolProp>
                      <boolProp name="XPath.tolerant">false</boolProp>
                      <boolProp name="XPath.namespace">false</boolProp>
                    </XPathAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
